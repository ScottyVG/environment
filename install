#!/usr/bin/env bash
set -euo pipefail

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Logging function
log() {
    echo -e "[$(date '+%Y-%m-%d %H:%M:%S')] $*"
}

# Platform detection
if [[ "$OSTYPE" == "darwin"* ]]; then
    export PLATFORM="macos"
    export HOST=$(scutil --get LocalHostName 2>/dev/null || hostname -s)
    # Map macOS hostname to ship name (if not already a ship name)
    case "$HOST" in
        "Scotts-MacBook-Air-2") export HOST="voyager" ;;
        "voyager"|"enterprise"|"intrepid"|"defiant"|"reliant") 
            # Already a ship name, use as-is
            export HOST="$HOST" ;;
        *) 
            # Clean up hostname for use as directory name
            export HOST=$(echo "$HOST" | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9]//g') ;;
    esac
else
    export PLATFORM="linux"
    export HOST=$(hostnamectl --static 2>/dev/null || cat /proc/sys/kernel/hostname)
fi

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

log "üöÄ Starting environment setup for host '$HOST' ($PLATFORM)"

# Function to install dotfiles
install_dotfiles() {
    log "üìÅ Installing dotfiles..."
    
    if ! command -v stow &> /dev/null; then
        log "${YELLOW}‚ö†Ô∏è  GNU Stow not found. Installing...${NC}"
        if [[ "$PLATFORM" == "macos" ]]; then
            if command -v brew &> /dev/null; then
                brew install stow
            else
                log "${RED}‚ùå Homebrew not found. Please install Homebrew first.${NC}"
                return 1
            fi
        else
            sudo pacman -S --needed --noconfirm stow
        fi
    fi
    
    cd "$SCRIPT_DIR/dotfiles"
    if bash ./install; then
        log "${GREEN}‚úÖ Dotfiles installed successfully${NC}"
        return 0
    else
        log "${RED}‚ùå Failed to install dotfiles${NC}"
        return 1
    fi
}

# Function to install packages
install_packages() {
    log "üì¶ Installing packages..."
    
    cd "$SCRIPT_DIR/packages"
    if bash ./install; then
        log "${GREEN}‚úÖ Packages installed successfully${NC}"
        return 0
    else
        log "${RED}‚ùå Failed to install packages${NC}"
        return 1
    fi
}

# Show usage
show_usage() {
    echo "Environment Setup Script"
    echo ""
    echo "Usage: $0 [COMMAND]"
    echo ""
    echo "Commands:"
    echo "  dotfiles    Install dotfiles only"
    echo "  packages    Install packages only"
    echo "  all         Install both dotfiles and packages (default)"
    echo "  help        Show this help message"
    echo ""
    echo "Examples:"
    echo "  $0              # Install everything"
    echo "  $0 all          # Install everything"
    echo "  $0 dotfiles     # Install dotfiles only"
    echo "  $0 packages     # Install packages only"
}

# Main command handling
case "${1:-all}" in
    dotfiles)
        install_dotfiles
        ;;
    packages)
        install_packages
        ;;
    all)
        install_dotfiles && install_packages
        ;;
    help|--help|-h)
        show_usage
        ;;
    *)
        echo "Unknown command: $1"
        echo ""
        show_usage
        exit 1
        ;;
esac

log "üéâ Environment setup completed!"